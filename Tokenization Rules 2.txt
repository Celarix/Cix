- Found an directive (# followed by one of { define undefine ifdef ifndef else endif include }):
	- Add it to the token list as Directive.
	- Set the withinDirective flag as true.
- Found a newline ("\r\n"):
	- If the withinDirective flag is set, clear it and add a DirectiveEnd to the token list.
- Found a reserved word:
	- See the "Reserved Word Rules" section below.
- Found a word or numeric literal:
	- Add it to the token list as Identifier.
- Found a { or }
	- Add it to the token list as OpenScope or CloseScope.
- Found a ( or )
	- Add it to the token list as OpenParen or CloseParen.
- Found a [ or ]
	- Add it to the token list as OpenBracket or CloseBracket.
- Found a ;
	- Add it to the token list as Semicolon.
- Found an operator:
	- See the "Operator Rules" section below.

Operator Rules:
	- OpIdentity (+) requires: Preceding semicolon, closescope, openparen, comma, binary/ternary operator, or one of { - ! ~ }. Succeeding identifier, or one of { - ! ~ * & }.
	- OpInverse (-) requires: Preceding semicolon, closescope, openparen, comma, binary/ternary operator, or one of { + ! ~ }. Succeeding identifier, or one of { + ! ~ * & }.
	- OpLogicalNOT (!) requires: Preceding semicolon, closescope, openparen, comma, binary/ternary operator, or one of { + - ! ~ }. Succeeding identifier, or one of { + - ! ~ * & }.
	- OpBitwiseNOT (~) requires: Preceding semicolon, closescope, openparen, comma, binary/ternary operator, or one of { + - ! ~ }. Succeeding identifier, or one of { + - ! ~ * & }.
	- OpPreincrement (++) requires: Preceding semicolon, closescope, openparen, comma, or binary/ternary operator. Succeeding identifier.
	- OpPostincrement (++) requires: Preceding identifier or closebracket. Succeeding binary/ternary operator or semicolon.
	- OpPredecrement (--): Preceding semicolon, closescope, openparen, comma, or binary/ternary operator. Succeeding identifier.
	- OpPostIncrement: Preceding identifier or closebracket. Succeeding binary/ternary operator or semicolon.
	- OpPointerDerefence (*): Preceding semicolon, closescope, openparen, comma, binary/ternary operator, or one of { + - ! ~ & }. Succeeding identifier.
	- OpVariableDerefence (&): Preceding semicolon, closescope, openparen, comma, binary/ternary operator, or one of { + - ! ~ & }. Succeeding identifier.
	- OpMemberAccess (.): Preceding identifier, closeparen, closebracket. Succeeding identifier.